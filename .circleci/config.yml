version: 2.1

parameters:
  create-cache:
    type: boolean
    default: false

executors:
  my-executor:
    docker:
      - image: cimg/node:18.15
    resource_class: small

jobs:
  create-cache:
    executor: my-executor
    steps:
      - checkout
      - run: npm ci
      - save_cache:
          key: v1-node_modules-{{ checksum "./package-lock.json" }}
          paths:
            - ./node_modules
      - save_cache:
          key: v1-dot-npm-{{ checksum "./package-lock.json" }}
          paths:
            - ~/.npm

  npm-ci-no-cache:
    executor: my-executor
    steps:
      - checkout
      - run: npm ci
  npm-ci-with-node_modules-cache:
    executor: my-executor
    steps:
      - checkout
      - restore_cache:
          key: v1-node_modules-{{ checksum "./package-lock.json" }}
  npm-ci-with-dot-npm-cache:
    executor: my-executor
    steps:
      - checkout
      - restore_cache:
          key: v1-dot-npm-{{ checksum "./package-lock.json" }}
      - run: npm ci
  npm-ci-with-dot-npm-cache-fallback:
    executor: my-executor
    steps:
      - checkout
      - run: |
          rm package.json
          rm package-lock.json
          cp fallback/package.json .
          cp fallback/package-lock.json .
      - restore_cache:
          keys:
              - v1-dot-npm-{{ checksum "./package-lock.json" }}
              - v1-dot-npm-
      - run: npm ci

  npm-install-no-cache:
    executor: my-executor
    steps:
      - checkout
      - run: npm install
  npm-install-with-node_modules-cache:
    executor: my-executor
    steps:
      - checkout
      - restore_cache:
          key: v1-node_modules-{{ checksum "./package-lock.json" }}
      - run: npm install
  npm-install-with-fallback:
    executor: my-executor
    steps:
      - checkout
      - run: |
          rm package.json
          rm package-lock.json
          cp fallback/package.json .
          cp fallback/package-lock.json .
      - restore_cache:
          keys:
            - v1-node_modules-{{ checksum "./package-lock.json" }}
            - v1-node_modules-
      - run: npm install

workflows:
  create-cache:
    when: << pipeline.parameters.create-cache >>
    jobs:
      - create-cache
  main:
    unless: << pipeline.parameters.create-cache >>
    jobs:
      - npm-ci-no-cache
      - npm-ci-with-node_modules-cache
      - npm-ci-with-dot-npm-cache
      - npm-ci-with-dot-npm-cache-fallback
      - npm-install-no-cache
      - npm-install-with-node_modules-cache
      - npm-install-with-fallback
